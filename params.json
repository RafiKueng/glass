{"name":"Glass","tagline":"A parallel, free-form gravitational lens modeling tool and framework","body":"GLASS - The free-form gravitational lens modeling framework\r\n-----------------------------------------------------------\r\n\r\nGLASS is a software package for modeling strong gravitianal lenses. It produces\r\nan ensemble of possible models that fit the observed input data and conform to\r\ncertain constraints specified by the user. This document describes the installation\r\nprocess and how to run a typical case.\r\n\r\nDependecies\r\n-----------\r\n\r\nGLASS is currently written in Python 2.7 with a small portion written in C. GLASS\r\ndoes not support Python 3 at the current time. GLASS makes heavy use of the numerical\r\nroutines provided by the numpy and scipy packages as well as the linear programming\r\npackage GLPK. This latter package, and its Python interface, is provided with GLASS\r\nand will be installed automatically in the GLASS build directory by following the\r\ndirections below.\r\n\r\n\r\nDownloading and unpacking GLASS\r\n-------------------------------\r\n\r\nGLASS can be downloaded as a .zip file or using git from GitHub:\r\n\r\nhttps://github.com/jpcoles/glass\r\n\r\nAfter obtaining the source code, it will, by default, be located in a directory\r\ncalled 'glass'.\r\n\r\nBuilding GLASS\r\n--------------\r\n\r\nGLASS and the GLPK can be built simply by running the command 'make' in the \r\nglass source code directory. This will unpack the GLPK packages and compile\r\nthem. It will also build and install GLASS. All compiled code and executables\r\nwill exist under the glass/build directory.\r\n\r\nRunning GLASS\r\n-------------\r\n\r\nIn the glass directory there is a script called 'run_glass' which will execute\r\nGLASS with the proper environment paths regardless of the current directory.\r\n\r\nFor example, running 'run_glass' with no arguments produces the following output:\r\n\r\n    $ ./run_glass\r\n    Usage: glass.py <input>\r\n\r\n\r\nThe Examples directory contains a number of example input files. The simplest example\r\nis B1115.gls\r\n\r\nRun this example from the Examples directory:\r\n\r\n    Examples $ ../run_glass B1115.gls\r\n\r\nThis will produce an output file B1115.state which contains the entire running state\r\nof the modeling including all of the generated models.\r\n\r\n\r\nAnalyzing the Output\r\n--------------------\r\n\r\nIn the 'Tools' directory there is a proram called 'viewstate.py' uses GLASS as a\r\nlibrary and can generate plots from the output state file. To see the default\r\nplots run the command\r\n\r\n    Examples $ ../run_glass ../Tools/viewstate.py B1115.state\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}